{"version":3,"file":"static/js/7633.4177c00c.chunk.js","mappings":"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","sources":["../node_modules/@tsparticles/engine/browser/Core/Canvas.js","../node_modules/@tsparticles/engine/browser/Core/Utils/EventListeners.js","../node_modules/@tsparticles/engine/browser/Core/Utils/InteractionManager.js","../node_modules/@tsparticles/engine/browser/Core/Utils/Point.js","../node_modules/@tsparticles/engine/browser/Core/Utils/QuadTree.js","../node_modules/@tsparticles/engine/browser/Core/Particles.js","../node_modules/@tsparticles/engine/browser/Core/Retina.js","../node_modules/@tsparticles/engine/browser/Core/Container.js"],"sourcesContent":["import { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \"../Utils/CanvasUtils.js\";\nimport { deepExtend, getLogger, safeMutationObserver } from \"../Utils/Utils.js\";\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils.js\";\nimport { generatedAttribute } from \"./Utils/Constants.js\";\nfunction setTransformValue(factor, newFactor, key) {\n    const newValue = newFactor[key], defaultValue = 1;\n    if (newValue !== undefined) {\n        factor[key] = (factor[key] ?? defaultValue) * newValue;\n    }\n}\nfunction setStyle(canvas, style, important = false) {\n    if (!style) {\n        return;\n    }\n    const element = canvas;\n    if (!element) {\n        return;\n    }\n    const elementStyle = element.style;\n    if (!elementStyle) {\n        return;\n    }\n    for (const key in style) {\n        const value = style[key];\n        if (!value) {\n            continue;\n        }\n        elementStyle.setProperty(key, value, important ? \"important\" : \"\");\n    }\n}\nexport class Canvas {\n    constructor(container) {\n        this.container = container;\n        this._applyPostDrawUpdaters = (particle) => {\n            for (const updater of this._postDrawUpdaters) {\n                updater.afterDraw?.(particle);\n            }\n        };\n        this._applyPreDrawUpdaters = (ctx, particle, radius, zOpacity, colorStyles, transform) => {\n            for (const updater of this._preDrawUpdaters) {\n                if (updater.getColorStyles) {\n                    const { fill, stroke } = updater.getColorStyles(particle, ctx, radius, zOpacity);\n                    if (fill) {\n                        colorStyles.fill = fill;\n                    }\n                    if (stroke) {\n                        colorStyles.stroke = stroke;\n                    }\n                }\n                if (updater.getTransformValues) {\n                    const updaterTransform = updater.getTransformValues(particle);\n                    for (const key in updaterTransform) {\n                        setTransformValue(transform, updaterTransform, key);\n                    }\n                }\n                updater.beforeDraw?.(particle);\n            }\n        };\n        this._applyResizePlugins = () => {\n            for (const plugin of this._resizePlugins) {\n                plugin.resize?.();\n            }\n        };\n        this._getPluginParticleColors = (particle) => {\n            let fColor, sColor;\n            for (const plugin of this._colorPlugins) {\n                if (!fColor && plugin.particleFillColor) {\n                    fColor = rangeColorToHsl(plugin.particleFillColor(particle));\n                }\n                if (!sColor && plugin.particleStrokeColor) {\n                    sColor = rangeColorToHsl(plugin.particleStrokeColor(particle));\n                }\n                if (fColor && sColor) {\n                    break;\n                }\n            }\n            return [fColor, sColor];\n        };\n        this._initCover = async () => {\n            const options = this.container.actualOptions, cover = options.backgroundMask.cover, color = cover.color;\n            if (color) {\n                const coverRgb = rangeColorToRgb(color);\n                if (coverRgb) {\n                    const coverColor = {\n                        ...coverRgb,\n                        a: cover.opacity,\n                    };\n                    this._coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n                }\n            }\n            else {\n                await new Promise((resolve, reject) => {\n                    if (!cover.image) {\n                        return;\n                    }\n                    const img = document.createElement(\"img\");\n                    img.addEventListener(\"load\", () => {\n                        this._coverImage = {\n                            image: img,\n                            opacity: cover.opacity,\n                        };\n                        resolve();\n                    });\n                    img.addEventListener(\"error\", (evt) => {\n                        reject(evt.error);\n                    });\n                    img.src = cover.image;\n                });\n            }\n        };\n        this._initStyle = () => {\n            const element = this.element, options = this.container.actualOptions;\n            if (!element) {\n                return;\n            }\n            if (this._fullScreen) {\n                this._originalStyle = deepExtend({}, element.style);\n                this._setFullScreenStyle();\n            }\n            else {\n                this._resetOriginalStyle();\n            }\n            for (const key in options.style) {\n                if (!key || !options.style) {\n                    continue;\n                }\n                const value = options.style[key];\n                if (!value) {\n                    continue;\n                }\n                element.style.setProperty(key, value, \"important\");\n            }\n        };\n        this._initTrail = async () => {\n            const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = trail.fill;\n            if (!trail.enable) {\n                return;\n            }\n            const factorNumerator = 1, opacity = factorNumerator / trail.length;\n            if (trailFill.color) {\n                const fillColor = rangeColorToRgb(trailFill.color);\n                if (!fillColor) {\n                    return;\n                }\n                this._trailFill = {\n                    color: {\n                        ...fillColor,\n                    },\n                    opacity,\n                };\n            }\n            else {\n                await new Promise((resolve, reject) => {\n                    if (!trailFill.image) {\n                        return;\n                    }\n                    const img = document.createElement(\"img\");\n                    img.addEventListener(\"load\", () => {\n                        this._trailFill = {\n                            image: img,\n                            opacity,\n                        };\n                        resolve();\n                    });\n                    img.addEventListener(\"error\", (evt) => {\n                        reject(evt.error);\n                    });\n                    img.src = trailFill.image;\n                });\n            }\n        };\n        this._paintBase = (baseColor) => {\n            this.draw((ctx) => paintBase(ctx, this.size, baseColor));\n        };\n        this._paintImage = (image, opacity) => {\n            this.draw((ctx) => paintImage(ctx, this.size, image, opacity));\n        };\n        this._repairStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            this._safeMutationObserver((observer) => observer.disconnect());\n            this._initStyle();\n            this.initBackground();\n            this._safeMutationObserver((observer) => observer.observe(element, { attributes: true }));\n        };\n        this._resetOriginalStyle = () => {\n            const element = this.element, originalStyle = this._originalStyle;\n            if (!(element && originalStyle)) {\n                return;\n            }\n            setStyle(element, originalStyle);\n        };\n        this._safeMutationObserver = (callback) => {\n            if (!this._mutationObserver) {\n                return;\n            }\n            callback(this._mutationObserver);\n        };\n        this._setFullScreenStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            const radix = 10;\n            setStyle(element, {\n                position: \"fixed\",\n                zIndex: this.container.actualOptions.fullScreen.zIndex.toString(radix),\n                top: \"0\",\n                left: \"0\",\n                width: \"100%\",\n                height: \"100%\",\n            }, true);\n        };\n        this.size = {\n            height: 0,\n            width: 0,\n        };\n        this._context = null;\n        this._generated = false;\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    get _fullScreen() {\n        return this.container.actualOptions.fullScreen.enable;\n    }\n    clear() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = this._trailFill, minimumLength = 0;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > minimumLength && trailFill) {\n            if (trailFill.color) {\n                this._paintBase(getStyleFromRgb(trailFill.color, trailFill.opacity));\n            }\n            else if (trailFill.image) {\n                this._paintImage(trailFill.image, trailFill.opacity);\n            }\n        }\n        else if (options.clear) {\n            this.draw((ctx) => {\n                clear(ctx, this.size);\n            });\n        }\n    }\n    destroy() {\n        this.stop();\n        if (this._generated) {\n            const element = this.element;\n            element?.remove();\n        }\n        else {\n            this._resetOriginalStyle();\n        }\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    draw(cb) {\n        const ctx = this._context;\n        if (!ctx) {\n            return;\n        }\n        return cb(ctx);\n    }\n    drawAsync(cb) {\n        const ctx = this._context;\n        if (!ctx) {\n            return Promise.resolve(undefined);\n        }\n        return cb(ctx);\n    }\n    async drawParticle(particle, delta) {\n        if (particle.spawning || particle.destroyed) {\n            return;\n        }\n        const radius = particle.getRadius(), minimumSize = 0;\n        if (radius <= minimumSize) {\n            return;\n        }\n        const pfColor = particle.getFillColor(), psColor = particle.getStrokeColor() ?? pfColor;\n        let [fColor, sColor] = this._getPluginParticleColors(particle);\n        if (!fColor) {\n            fColor = pfColor;\n        }\n        if (!sColor) {\n            sColor = psColor;\n        }\n        if (!fColor && !sColor) {\n            return;\n        }\n        await this.drawAsync(async (ctx) => {\n            const container = this.container, options = container.actualOptions, zIndexOptions = particle.options.zIndex, zIndexFactorOffset = 1, zIndexFactor = zIndexFactorOffset - particle.zIndexFactor, zOpacityFactor = zIndexFactor ** zIndexOptions.opacityRate, defaultOpacity = 1, opacity = particle.bubble.opacity ?? particle.opacity?.value ?? defaultOpacity, strokeOpacity = particle.strokeOpacity ?? opacity, zOpacity = opacity * zOpacityFactor, zStrokeOpacity = strokeOpacity * zOpacityFactor, transform = {}, colorStyles = {\n                fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined,\n            };\n            colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n            this._applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform);\n            await drawParticle({\n                container,\n                context: ctx,\n                particle,\n                delta,\n                colorStyles,\n                backgroundMask: options.backgroundMask.enable,\n                composite: options.backgroundMask.composite,\n                radius: radius * zIndexFactor ** zIndexOptions.sizeRate,\n                opacity: zOpacity,\n                shadow: particle.options.shadow,\n                transform,\n            });\n            this._applyPostDrawUpdaters(particle);\n        });\n    }\n    async drawParticlePlugin(plugin, particle, delta) {\n        await this.drawAsync((ctx) => drawParticlePlugin(ctx, plugin, particle, delta));\n    }\n    async drawPlugin(plugin, delta) {\n        await this.drawAsync((ctx) => drawPlugin(ctx, plugin, delta));\n    }\n    async init() {\n        this._safeMutationObserver((obs) => obs.disconnect());\n        this._mutationObserver = safeMutationObserver((records) => {\n            for (const record of records) {\n                if (record.type === \"attributes\" && record.attributeName === \"style\") {\n                    this._repairStyle();\n                }\n            }\n        });\n        this.resize();\n        this._initStyle();\n        await this._initCover();\n        try {\n            await this._initTrail();\n        }\n        catch (e) {\n            getLogger().error(e);\n        }\n        this.initBackground();\n        this._safeMutationObserver((obs) => {\n            if (!this.element) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.initUpdaters();\n        this.initPlugins();\n        this.paint();\n    }\n    initBackground() {\n        const options = this.container.actualOptions, background = options.background, element = this.element;\n        if (!element) {\n            return;\n        }\n        const elementStyle = element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = rangeColorToRgb(background.color);\n            elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n    initPlugins() {\n        this._resizePlugins = [];\n        for (const [, plugin] of this.container.plugins) {\n            if (plugin.resize) {\n                this._resizePlugins.push(plugin);\n            }\n            if (plugin.particleFillColor ?? plugin.particleStrokeColor) {\n                this._colorPlugins.push(plugin);\n            }\n        }\n    }\n    initUpdaters() {\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        for (const updater of this.container.particles.updaters) {\n            if (updater.afterDraw) {\n                this._postDrawUpdaters.push(updater);\n            }\n            if (updater.getColorStyles ?? updater.getTransformValues ?? updater.beforeDraw) {\n                this._preDrawUpdaters.push(updater);\n            }\n        }\n    }\n    loadCanvas(canvas) {\n        if (this._generated && this.element) {\n            this.element.remove();\n        }\n        this._generated =\n            canvas.dataset && generatedAttribute in canvas.dataset\n                ? canvas.dataset[generatedAttribute] === \"true\"\n                : this._generated;\n        this.element = canvas;\n        this.element.ariaHidden = \"true\";\n        this._originalStyle = deepExtend({}, this.element.style);\n        this.size.height = canvas.offsetHeight;\n        this.size.width = canvas.offsetWidth;\n        this._context = this.element.getContext(\"2d\");\n        this._safeMutationObserver((obs) => {\n            if (!this.element) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.container.retina.init();\n        this.initBackground();\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        this.draw((ctx) => {\n            if (options.backgroundMask.enable && options.backgroundMask.cover) {\n                clear(ctx, this.size);\n                if (this._coverImage) {\n                    this._paintImage(this._coverImage.image, this._coverImage.opacity);\n                }\n                else if (this._coverColorStyle) {\n                    this._paintBase(this._coverColorStyle);\n                }\n                else {\n                    this._paintBase();\n                }\n            }\n            else {\n                this._paintBase();\n            }\n        });\n    }\n    resize() {\n        if (!this.element) {\n            return false;\n        }\n        const container = this.container, pxRatio = container.retina.pixelRatio, size = container.canvas.size, newSize = {\n            width: this.element.offsetWidth * pxRatio,\n            height: this.element.offsetHeight * pxRatio,\n        };\n        if (newSize.height === size.height &&\n            newSize.width === size.width &&\n            newSize.height === this.element.height &&\n            newSize.width === this.element.width) {\n            return false;\n        }\n        const oldSize = { ...size };\n        this.element.width = size.width = this.element.offsetWidth * pxRatio;\n        this.element.height = size.height = this.element.offsetHeight * pxRatio;\n        if (this.container.started) {\n            container.particles.setResizeFactor({\n                width: size.width / oldSize.width,\n                height: size.height / oldSize.height,\n            });\n        }\n        return true;\n    }\n    stop() {\n        this._safeMutationObserver((obs) => obs.disconnect());\n        this._mutationObserver = undefined;\n        this.draw((ctx) => clear(ctx, this.size));\n    }\n    async windowResize() {\n        if (!this.element || !this.resize()) {\n            return;\n        }\n        const container = this.container, needsRefresh = container.updateActualOptions();\n        await container.particles.setDensity();\n        this._applyResizePlugins();\n        if (needsRefresh) {\n            await container.refresh();\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, isBoolean, safeMatchMedia } from \"../../Utils/Utils.js\";\nimport { millisecondsToSeconds, mouseDownEvent, mouseLeaveEvent, mouseMoveEvent, mouseOutEvent, mouseUpEvent, resizeEvent, touchCancelEvent, touchEndEvent, touchMoveEvent, touchStartEvent, visibilityChangeEvent, } from \"./Constants.js\";\nconst double = 2;\nfunction manageListener(element, event, handler, add, options) {\n    if (add) {\n        let addOptions = { passive: true };\n        if (isBoolean(options)) {\n            addOptions.capture = options;\n        }\n        else if (options !== undefined) {\n            addOptions = options;\n        }\n        element.addEventListener(event, handler, addOptions);\n    }\n    else {\n        const removeOptions = options;\n        element.removeEventListener(event, handler, removeOptions);\n    }\n}\nexport class EventListeners {\n    constructor(container) {\n        this.container = container;\n        this._doMouseTouchClick = (e) => {\n            const container = this.container, options = container.actualOptions;\n            if (this._canPush) {\n                const mouseInteractivity = container.interactivity.mouse, mousePos = mouseInteractivity.position;\n                if (!mousePos) {\n                    return;\n                }\n                mouseInteractivity.clickPosition = { ...mousePos };\n                mouseInteractivity.clickTime = new Date().getTime();\n                const onClick = options.interactivity.events.onClick;\n                executeOnSingleOrMultiple(onClick.mode, (mode) => this.container.handleClickMode(mode));\n            }\n            if (e.type === \"touchend\") {\n                const touchDelay = 500;\n                setTimeout(() => this._mouseTouchFinish(), touchDelay);\n            }\n        };\n        this._handleThemeChange = (e) => {\n            const mediaEvent = e, container = this.container, options = container.options, defaultThemes = options.defaultThemes, themeName = mediaEvent.matches ? defaultThemes.dark : defaultThemes.light, theme = options.themes.find((theme) => theme.name === themeName);\n            if (theme && theme.default.auto) {\n                void container.loadTheme(themeName);\n            }\n        };\n        this._handleVisibilityChange = () => {\n            const container = this.container, options = container.actualOptions;\n            this._mouseTouchFinish();\n            if (!options.pauseOnBlur) {\n                return;\n            }\n            if (document && document.hidden) {\n                container.pageHidden = true;\n                container.pause();\n            }\n            else {\n                container.pageHidden = false;\n                if (container.animationStatus) {\n                    container.play(true);\n                }\n                else {\n                    container.draw(true);\n                }\n            }\n        };\n        this._handleWindowResize = () => {\n            if (this._resizeTimeout) {\n                clearTimeout(this._resizeTimeout);\n                delete this._resizeTimeout;\n            }\n            const handleResize = async () => {\n                const canvas = this.container.canvas;\n                await canvas?.windowResize();\n            };\n            this._resizeTimeout = setTimeout(() => void handleResize(), this.container.actualOptions.interactivity.events.resize.delay * millisecondsToSeconds);\n        };\n        this._manageInteractivityListeners = (mouseLeaveTmpEvent, add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\n            const interactivityEl = container.interactivity.element;\n            if (!interactivityEl) {\n                return;\n            }\n            const html = interactivityEl, canvasEl = container.canvas.element;\n            if (canvasEl) {\n                canvasEl.style.pointerEvents = html === canvasEl ? \"initial\" : \"none\";\n            }\n            if (!(options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable)) {\n                return;\n            }\n            manageListener(interactivityEl, mouseMoveEvent, handlers.mouseMove, add);\n            manageListener(interactivityEl, touchStartEvent, handlers.touchStart, add);\n            manageListener(interactivityEl, touchMoveEvent, handlers.touchMove, add);\n            if (!options.interactivity.events.onClick.enable) {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEnd, add);\n            }\n            else {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEndClick, add);\n                manageListener(interactivityEl, mouseUpEvent, handlers.mouseUp, add);\n                manageListener(interactivityEl, mouseDownEvent, handlers.mouseDown, add);\n            }\n            manageListener(interactivityEl, mouseLeaveTmpEvent, handlers.mouseLeave, add);\n            manageListener(interactivityEl, touchCancelEvent, handlers.touchCancel, add);\n        };\n        this._manageListeners = (add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions, detectType = options.interactivity.detectsOn, canvasEl = container.canvas.element;\n            let mouseLeaveTmpEvent = mouseLeaveEvent;\n            if (detectType === \"window\") {\n                container.interactivity.element = window;\n                mouseLeaveTmpEvent = mouseOutEvent;\n            }\n            else if (detectType === \"parent\" && canvasEl) {\n                container.interactivity.element = canvasEl.parentElement ?? canvasEl.parentNode;\n            }\n            else {\n                container.interactivity.element = canvasEl;\n            }\n            this._manageMediaMatch(add);\n            this._manageResize(add);\n            this._manageInteractivityListeners(mouseLeaveTmpEvent, add);\n            if (document) {\n                manageListener(document, visibilityChangeEvent, handlers.visibilityChange, add, false);\n            }\n        };\n        this._manageMediaMatch = (add) => {\n            const handlers = this._handlers, mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\");\n            if (!mediaMatch) {\n                return;\n            }\n            if (mediaMatch.addEventListener !== undefined) {\n                manageListener(mediaMatch, \"change\", handlers.themeChange, add);\n                return;\n            }\n            if (mediaMatch.addListener === undefined) {\n                return;\n            }\n            if (add) {\n                mediaMatch.addListener(handlers.oldThemeChange);\n            }\n            else {\n                mediaMatch.removeListener(handlers.oldThemeChange);\n            }\n        };\n        this._manageResize = (add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\n            if (!options.interactivity.events.resize) {\n                return;\n            }\n            if (typeof ResizeObserver === \"undefined\") {\n                manageListener(window, resizeEvent, handlers.resize, add);\n                return;\n            }\n            const canvasEl = container.canvas.element;\n            if (this._resizeObserver && !add) {\n                if (canvasEl) {\n                    this._resizeObserver.unobserve(canvasEl);\n                }\n                this._resizeObserver.disconnect();\n                delete this._resizeObserver;\n            }\n            else if (!this._resizeObserver && add && canvasEl) {\n                this._resizeObserver = new ResizeObserver((entries) => {\n                    const entry = entries.find((e) => e.target === canvasEl);\n                    if (!entry) {\n                        return;\n                    }\n                    this._handleWindowResize();\n                });\n                this._resizeObserver.observe(canvasEl);\n            }\n        };\n        this._mouseDown = () => {\n            const { interactivity } = this.container;\n            if (!interactivity) {\n                return;\n            }\n            const { mouse } = interactivity;\n            mouse.clicking = true;\n            mouse.downPosition = mouse.position;\n        };\n        this._mouseTouchClick = (e) => {\n            const container = this.container, options = container.actualOptions, { mouse } = container.interactivity;\n            mouse.inside = true;\n            let handled = false;\n            const mousePosition = mouse.position;\n            if (!mousePosition || !options.interactivity.events.onClick.enable) {\n                return;\n            }\n            for (const [, plugin] of container.plugins) {\n                if (!plugin.clickPositionValid) {\n                    continue;\n                }\n                handled = plugin.clickPositionValid(mousePosition);\n                if (handled) {\n                    break;\n                }\n            }\n            if (!handled) {\n                this._doMouseTouchClick(e);\n            }\n            mouse.clicking = false;\n        };\n        this._mouseTouchFinish = () => {\n            const interactivity = this.container.interactivity;\n            if (!interactivity) {\n                return;\n            }\n            const mouse = interactivity.mouse;\n            delete mouse.position;\n            delete mouse.clickPosition;\n            delete mouse.downPosition;\n            interactivity.status = mouseLeaveEvent;\n            mouse.inside = false;\n            mouse.clicking = false;\n        };\n        this._mouseTouchMove = (e) => {\n            const container = this.container, options = container.actualOptions, interactivity = container.interactivity, canvasEl = container.canvas.element;\n            if (!interactivity?.element) {\n                return;\n            }\n            interactivity.mouse.inside = true;\n            let pos;\n            if (e.type.startsWith(\"pointer\")) {\n                this._canPush = true;\n                const mouseEvent = e;\n                if (interactivity.element === window) {\n                    if (canvasEl) {\n                        const clientRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.clientX - clientRect.left,\n                            y: mouseEvent.clientY - clientRect.top,\n                        };\n                    }\n                }\n                else if (options.interactivity.detectsOn === \"parent\") {\n                    const source = mouseEvent.target, target = mouseEvent.currentTarget;\n                    if (source && target && canvasEl) {\n                        const sourceRect = source.getBoundingClientRect(), targetRect = target.getBoundingClientRect(), canvasRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.offsetX + double * sourceRect.left - (targetRect.left + canvasRect.left),\n                            y: mouseEvent.offsetY + double * sourceRect.top - (targetRect.top + canvasRect.top),\n                        };\n                    }\n                    else {\n                        pos = {\n                            x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                            y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                        };\n                    }\n                }\n                else if (mouseEvent.target === canvasEl) {\n                    pos = {\n                        x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                        y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                    };\n                }\n            }\n            else {\n                this._canPush = e.type !== \"touchmove\";\n                if (canvasEl) {\n                    const touchEvent = e, lengthOffset = 1, lastTouch = touchEvent.touches[touchEvent.touches.length - lengthOffset], canvasRect = canvasEl.getBoundingClientRect(), defaultCoordinate = 0;\n                    pos = {\n                        x: lastTouch.clientX - (canvasRect.left ?? defaultCoordinate),\n                        y: lastTouch.clientY - (canvasRect.top ?? defaultCoordinate),\n                    };\n                }\n            }\n            const pxRatio = container.retina.pixelRatio;\n            if (pos) {\n                pos.x *= pxRatio;\n                pos.y *= pxRatio;\n            }\n            interactivity.mouse.position = pos;\n            interactivity.status = mouseMoveEvent;\n        };\n        this._touchEnd = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchFinish();\n        };\n        this._touchEndClick = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchClick(e);\n        };\n        this._touchStart = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.set(touch.identifier, performance.now());\n            }\n            this._mouseTouchMove(e);\n        };\n        this._canPush = true;\n        this._touches = new Map();\n        this._handlers = {\n            mouseDown: () => this._mouseDown(),\n            mouseLeave: () => this._mouseTouchFinish(),\n            mouseMove: (e) => this._mouseTouchMove(e),\n            mouseUp: (e) => this._mouseTouchClick(e),\n            touchStart: (e) => this._touchStart(e),\n            touchMove: (e) => this._mouseTouchMove(e),\n            touchEnd: (e) => this._touchEnd(e),\n            touchCancel: (e) => this._touchEnd(e),\n            touchEndClick: (e) => this._touchEndClick(e),\n            visibilityChange: () => this._handleVisibilityChange(),\n            themeChange: (e) => this._handleThemeChange(e),\n            oldThemeChange: (e) => this._handleThemeChange(e),\n            resize: () => {\n                this._handleWindowResize();\n            },\n        };\n    }\n    addListeners() {\n        this._manageListeners(true);\n    }\n    removeListeners() {\n        this._manageListeners(false);\n    }\n}\n","export class InteractionManager {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this._interactors = [];\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n    }\n    async externalInteract(delta) {\n        for (const interactor of this._externalInteractors) {\n            if (interactor.isEnabled()) {\n                await interactor.interact(delta);\n            }\n        }\n    }\n    handleClickMode(mode) {\n        for (const interactor of this._externalInteractors) {\n            interactor.handleClickMode?.(mode);\n        }\n    }\n    async init() {\n        this._interactors = await this._engine.getInteractors(this.container, true);\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n        for (const interactor of this._interactors) {\n            switch (interactor.type) {\n                case \"external\":\n                    this._externalInteractors.push(interactor);\n                    break;\n                case \"particles\":\n                    this._particleInteractors.push(interactor);\n                    break;\n            }\n            interactor.init();\n        }\n    }\n    async particlesInteract(particle, delta) {\n        for (const interactor of this._externalInteractors) {\n            interactor.clear(particle, delta);\n        }\n        for (const interactor of this._particleInteractors) {\n            if (interactor.isEnabled(particle)) {\n                await interactor.interact(particle, delta);\n            }\n        }\n    }\n    reset(particle) {\n        for (const interactor of this._externalInteractors) {\n            if (interactor.isEnabled()) {\n                interactor.reset(particle);\n            }\n        }\n        for (const interactor of this._particleInteractors) {\n            if (interactor.isEnabled(particle)) {\n                interactor.reset(particle);\n            }\n        }\n    }\n}\n","export class Point {\n    constructor(position, particle) {\n        this.position = position;\n        this.particle = particle;\n    }\n}\n","import { Circle } from \"./Circle.js\";\nimport { Rectangle } from \"./Rectangle.js\";\nimport { getDistance } from \"../../Utils/NumberUtils.js\";\nconst half = 0.5, double = 2, subdivideCount = 4;\nexport class QuadTree {\n    constructor(rectangle, capacity) {\n        this.rectangle = rectangle;\n        this.capacity = capacity;\n        this._subdivide = () => {\n            const { x, y } = this.rectangle.position, { width, height } = this.rectangle.size, { capacity } = this;\n            for (let i = 0; i < subdivideCount; i++) {\n                const fixedIndex = i % double;\n                this._subs.push(new QuadTree(new Rectangle(x + width * half * fixedIndex, y + height * half * (Math.round(i * half) - fixedIndex), width * half, height * half), capacity));\n            }\n            this._divided = true;\n        };\n        this._points = [];\n        this._divided = false;\n        this._subs = [];\n    }\n    insert(point) {\n        if (!this.rectangle.contains(point.position)) {\n            return false;\n        }\n        if (this._points.length < this.capacity) {\n            this._points.push(point);\n            return true;\n        }\n        if (!this._divided) {\n            this._subdivide();\n        }\n        return this._subs.some((sub) => sub.insert(point));\n    }\n    query(range, check, found) {\n        const res = found ?? [];\n        if (!range.intersects(this.rectangle)) {\n            return [];\n        }\n        for (const p of this._points) {\n            if (!range.contains(p.position) &&\n                getDistance(range.position, p.position) > p.particle.getRadius() &&\n                (!check || check(p.particle))) {\n                continue;\n            }\n            res.push(p.particle);\n        }\n        if (this._divided) {\n            for (const sub of this._subs) {\n                sub.query(range, check, res);\n            }\n        }\n        return res;\n    }\n    queryCircle(position, radius, check) {\n        return this.query(new Circle(position.x, position.y, radius), check);\n    }\n    queryRectangle(position, size, check) {\n        return this.query(new Rectangle(position.x, position.y, size.width, size.height), check);\n    }\n}\n","import { getLogger, getPosition } from \"../Utils/Utils.js\";\nimport { InteractionManager } from \"./Utils/InteractionManager.js\";\nimport { Point } from \"./Utils/Point.js\";\nimport { QuadTree } from \"./Utils/QuadTree.js\";\nimport { Rectangle } from \"./Utils/Rectangle.js\";\nimport { errorPrefix } from \"./Utils/Constants.js\";\nconst qTreeCapacity = 4, squareExp = 2, defaultRemoveQuantity = 1;\nconst qTreeRectangle = (canvasSize) => {\n    const { height, width } = canvasSize, posOffset = -0.25, sizeFactor = 1.5;\n    return new Rectangle(posOffset * width, posOffset * height, sizeFactor * width, sizeFactor * height);\n};\nexport class Particles {\n    constructor(engine, container) {\n        this._addToPool = (...particles) => {\n            for (const particle of particles) {\n                this._pool.push(particle);\n            }\n        };\n        this._applyDensity = async (options, manualCount, group) => {\n            const numberOptions = options.number;\n            if (!options.number.density?.enable) {\n                if (group === undefined) {\n                    this._limit = numberOptions.limit.value;\n                }\n                else if (numberOptions.limit) {\n                    this._groupLimits.set(group, numberOptions.limit.value);\n                }\n                return;\n            }\n            const densityFactor = this._initDensityFactor(numberOptions.density), optParticlesNumber = numberOptions.value, minLimit = 0, optParticlesLimit = numberOptions.limit.value > minLimit ? numberOptions.limit.value : optParticlesNumber, particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount, particlesCount = Math.min(this.count, this.filter((t) => t.group === group).length);\n            if (group === undefined) {\n                this._limit = numberOptions.limit.value * densityFactor;\n            }\n            else {\n                this._groupLimits.set(group, numberOptions.limit.value * densityFactor);\n            }\n            if (particlesCount < particlesNumber) {\n                await this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n            }\n            else if (particlesCount > particlesNumber) {\n                this.removeQuantity(particlesCount - particlesNumber, group);\n            }\n        };\n        this._initDensityFactor = (densityOptions) => {\n            const container = this._container, defaultFactor = 1;\n            if (!container.canvas.element || !densityOptions.enable) {\n                return defaultFactor;\n            }\n            const canvas = container.canvas.element, pxRatio = container.retina.pixelRatio;\n            return (canvas.width * canvas.height) / (densityOptions.height * densityOptions.width * pxRatio ** squareExp);\n        };\n        this._pushParticle = async (position, overrideOptions, group, initializer) => {\n            try {\n                let particle = this._pool.pop();\n                if (!particle) {\n                    const { Particle } = await import(\"./Particle.js\");\n                    particle = new Particle(this._engine, this._container);\n                }\n                await particle.init(this._nextId, position, overrideOptions, group);\n                let canAdd = true;\n                if (initializer) {\n                    canAdd = initializer(particle);\n                }\n                if (!canAdd) {\n                    return;\n                }\n                this._array.push(particle);\n                this._zArray.push(particle);\n                this._nextId++;\n                this._engine.dispatchEvent(\"particleAdded\", {\n                    container: this._container,\n                    data: {\n                        particle,\n                    },\n                });\n                return particle;\n            }\n            catch (e) {\n                getLogger().warning(`${errorPrefix} adding particle: ${e}`);\n            }\n        };\n        this._removeParticle = (index, group, override) => {\n            const particle = this._array[index];\n            if (!particle || particle.group !== group) {\n                return false;\n            }\n            const zIdx = this._zArray.indexOf(particle), deleteCount = 1;\n            this._array.splice(index, deleteCount);\n            this._zArray.splice(zIdx, deleteCount);\n            particle.destroy(override);\n            this._engine.dispatchEvent(\"particleRemoved\", {\n                container: this._container,\n                data: {\n                    particle,\n                },\n            });\n            this._addToPool(particle);\n            return true;\n        };\n        this._engine = engine;\n        this._container = container;\n        this._nextId = 0;\n        this._array = [];\n        this._zArray = [];\n        this._pool = [];\n        this._limit = 0;\n        this._groupLimits = new Map();\n        this._needsSort = false;\n        this._lastZIndex = 0;\n        this._interactionManager = new InteractionManager(engine, container);\n        this._pluginsInitialized = false;\n        const canvasSize = container.canvas.size;\n        this.quadTree = new QuadTree(qTreeRectangle(canvasSize), qTreeCapacity);\n        this.movers = [];\n        this.updaters = [];\n    }\n    get count() {\n        return this._array.length;\n    }\n    async addManualParticles() {\n        const container = this._container, options = container.actualOptions;\n        for (const particle of options.manualParticles) {\n            await this.addParticle(particle.position ? getPosition(particle.position, container.canvas.size) : undefined, particle.options);\n        }\n    }\n    async addParticle(position, overrideOptions, group, initializer) {\n        const limitOptions = this._container.actualOptions.particles.number.limit, limit = group === undefined ? this._limit : this._groupLimits.get(group) ?? this._limit, currentCount = this.count, minLimit = 0;\n        if (limit > minLimit) {\n            if (limitOptions.mode === \"delete\") {\n                const countOffset = 1, minCount = 0, countToRemove = currentCount + countOffset - limit;\n                if (countToRemove > minCount) {\n                    this.removeQuantity(countToRemove);\n                }\n            }\n            else if (limitOptions.mode === \"wait\") {\n                if (currentCount >= limit) {\n                    return;\n                }\n            }\n        }\n        return await this._pushParticle(position, overrideOptions, group, initializer);\n    }\n    clear() {\n        this._array = [];\n        this._zArray = [];\n        this._pluginsInitialized = false;\n    }\n    destroy() {\n        this._array = [];\n        this._zArray = [];\n        this.movers = [];\n        this.updaters = [];\n    }\n    async draw(delta) {\n        const container = this._container, canvas = container.canvas;\n        canvas.clear();\n        await this.update(delta);\n        for (const [, plugin] of container.plugins) {\n            await canvas.drawPlugin(plugin, delta);\n        }\n        for (const p of this._zArray) {\n            await p.draw(delta);\n        }\n    }\n    filter(condition) {\n        return this._array.filter(condition);\n    }\n    find(condition) {\n        return this._array.find(condition);\n    }\n    get(index) {\n        return this._array[index];\n    }\n    handleClickMode(mode) {\n        this._interactionManager.handleClickMode(mode);\n    }\n    async init() {\n        const container = this._container, options = container.actualOptions;\n        this._lastZIndex = 0;\n        this._needsSort = false;\n        await this.initPlugins();\n        let handled = false;\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particlesInitialization !== undefined) {\n                handled = plugin.particlesInitialization();\n            }\n            if (handled) {\n                break;\n            }\n        }\n        await this.addManualParticles();\n        if (!handled) {\n            const particlesOptions = options.particles, groups = particlesOptions.groups;\n            for (const group in groups) {\n                const groupOptions = groups[group];\n                for (let i = this.count, j = 0; j < groupOptions.number?.value && i < particlesOptions.number.value; i++, j++) {\n                    await this.addParticle(undefined, groupOptions, group);\n                }\n            }\n            for (let i = this.count; i < particlesOptions.number.value; i++) {\n                await this.addParticle();\n            }\n        }\n    }\n    async initPlugins() {\n        if (this._pluginsInitialized) {\n            return;\n        }\n        const container = this._container;\n        this.movers = await this._engine.getMovers(container, true);\n        this.updaters = await this._engine.getUpdaters(container, true);\n        await this._interactionManager.init();\n        for (const [, pathGenerator] of container.pathGenerators) {\n            await pathGenerator.init(container);\n        }\n    }\n    async push(nb, mouse, overrideOptions, group) {\n        for (let i = 0; i < nb; i++) {\n            await this.addParticle(mouse?.position, overrideOptions, group);\n        }\n    }\n    async redraw() {\n        this.clear();\n        await this.init();\n        await this.draw({ value: 0, factor: 0 });\n    }\n    remove(particle, group, override) {\n        this.removeAt(this._array.indexOf(particle), undefined, group, override);\n    }\n    removeAt(index, quantity = defaultRemoveQuantity, group, override) {\n        const minIndex = 0;\n        if (index < minIndex || index > this.count) {\n            return;\n        }\n        let deleted = 0;\n        for (let i = index; deleted < quantity && i < this.count; i++) {\n            if (this._removeParticle(i--, group, override)) {\n                deleted++;\n            }\n        }\n    }\n    removeQuantity(quantity, group) {\n        const defaultIndex = 0;\n        this.removeAt(defaultIndex, quantity, group);\n    }\n    async setDensity() {\n        const options = this._container.actualOptions, groups = options.particles.groups, manualCount = 0;\n        for (const group in groups) {\n            await this._applyDensity(groups[group], manualCount, group);\n        }\n        await this._applyDensity(options.particles, options.manualParticles.length);\n    }\n    setLastZIndex(zIndex) {\n        this._lastZIndex = zIndex;\n        this._needsSort = this._needsSort || this._lastZIndex < zIndex;\n    }\n    setResizeFactor(factor) {\n        this._resizeFactor = factor;\n    }\n    async update(delta) {\n        const container = this._container, particlesToDelete = new Set();\n        this.quadTree = new QuadTree(qTreeRectangle(container.canvas.size), qTreeCapacity);\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.update();\n        }\n        for (const [, plugin] of container.plugins) {\n            await plugin.update?.(delta);\n        }\n        const resizeFactor = this._resizeFactor;\n        for (const particle of this._array) {\n            if (resizeFactor && !particle.ignoresResizeRatio) {\n                particle.position.x *= resizeFactor.width;\n                particle.position.y *= resizeFactor.height;\n                particle.initialPosition.x *= resizeFactor.width;\n                particle.initialPosition.y *= resizeFactor.height;\n            }\n            particle.ignoresResizeRatio = false;\n            this._interactionManager.reset(particle);\n            for (const [, plugin] of this._container.plugins) {\n                if (particle.destroyed) {\n                    break;\n                }\n                plugin.particleUpdate?.(particle, delta);\n            }\n            for (const mover of this.movers) {\n                if (mover.isEnabled(particle)) {\n                    await mover.move(particle, delta);\n                }\n            }\n            if (particle.destroyed) {\n                particlesToDelete.add(particle);\n                continue;\n            }\n            this.quadTree.insert(new Point(particle.getPosition(), particle));\n        }\n        if (particlesToDelete.size) {\n            const checkDelete = (p) => !particlesToDelete.has(p);\n            this._array = this.filter(checkDelete);\n            this._zArray = this._zArray.filter(checkDelete);\n            for (const particle of particlesToDelete) {\n                this._engine.dispatchEvent(\"particleRemoved\", {\n                    container: this._container,\n                    data: {\n                        particle,\n                    },\n                });\n            }\n            this._addToPool(...particlesToDelete);\n        }\n        await this._interactionManager.externalInteract(delta);\n        for (const particle of this._array) {\n            for (const updater of this.updaters) {\n                await updater.update(particle, delta);\n            }\n            if (!particle.destroyed && !particle.spawning) {\n                await this._interactionManager.particlesInteract(particle, delta);\n            }\n        }\n        delete this._resizeFactor;\n        if (this._needsSort) {\n            const zArray = this._zArray;\n            zArray.sort((a, b) => b.position.z - a.position.z || a.id - b.id);\n            const lengthOffset = 1;\n            this._lastZIndex = zArray[zArray.length - lengthOffset].position.z;\n            this._needsSort = false;\n        }\n    }\n}\n","import { getRangeValue } from \"../Utils/NumberUtils.js\";\nimport { isSsr } from \"../Utils/Utils.js\";\nconst defaultRatio = 1, defaultReduceFactor = 1;\nexport class Retina {\n    constructor(container) {\n        this.container = container;\n        this.pixelRatio = defaultRatio;\n        this.reduceFactor = defaultReduceFactor;\n    }\n    init() {\n        const container = this.container, options = container.actualOptions;\n        this.pixelRatio = !options.detectRetina || isSsr() ? defaultRatio : window.devicePixelRatio;\n        this.reduceFactor = defaultReduceFactor;\n        const ratio = this.pixelRatio, canvas = container.canvas;\n        if (canvas.element) {\n            const element = canvas.element;\n            canvas.size.width = element.offsetWidth * ratio;\n            canvas.size.height = element.offsetHeight * ratio;\n        }\n        const particles = options.particles, moveOptions = particles.move;\n        this.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n        this.sizeAnimationSpeed = getRangeValue(particles.size.animation.speed) * ratio;\n    }\n    initParticle(particle) {\n        const options = particle.options, ratio = this.pixelRatio, moveOptions = options.move, moveDistance = moveOptions.distance, props = particle.retina;\n        props.moveDrift = getRangeValue(moveOptions.drift) * ratio;\n        props.moveSpeed = getRangeValue(moveOptions.speed) * ratio;\n        props.sizeAnimationSpeed = getRangeValue(options.size.animation.speed) * ratio;\n        const maxDistance = props.maxDistance;\n        maxDistance.horizontal = moveDistance.horizontal !== undefined ? moveDistance.horizontal * ratio : undefined;\n        maxDistance.vertical = moveDistance.vertical !== undefined ? moveDistance.vertical * ratio : undefined;\n        props.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n    }\n}\n","import { errorPrefix, millisecondsToSeconds } from \"./Utils/Constants.js\";\nimport { getLogger, safeIntersectionObserver } from \"../Utils/Utils.js\";\nimport { Canvas } from \"./Canvas.js\";\nimport { EventListeners } from \"./Utils/EventListeners.js\";\nimport { Options } from \"../Options/Classes/Options.js\";\nimport { Particles } from \"./Particles.js\";\nimport { Retina } from \"./Retina.js\";\nimport { getRangeValue } from \"../Utils/NumberUtils.js\";\nimport { loadOptions } from \"../Utils/OptionsUtils.js\";\nfunction guardCheck(container) {\n    return container && !container.destroyed;\n}\nconst defaultFps = 60;\nfunction initDelta(value, fpsLimit = defaultFps, smooth = false) {\n    return {\n        value,\n        factor: smooth ? defaultFps / fpsLimit : (defaultFps * value) / millisecondsToSeconds,\n    };\n}\nfunction loadContainerOptions(engine, container, ...sourceOptionsArr) {\n    const options = new Options(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\nexport class Container {\n    constructor(engine, id, sourceOptions) {\n        this._intersectionManager = (entries) => {\n            if (!guardCheck(this) || !this.actualOptions.pauseOnOutsideViewport) {\n                return;\n            }\n            for (const entry of entries) {\n                if (entry.target !== this.interactivity.element) {\n                    continue;\n                }\n                if (entry.isIntersecting) {\n                    this.play();\n                }\n                else {\n                    this.pause();\n                }\n            }\n        };\n        this._nextFrame = async (timestamp) => {\n            try {\n                if (!this._smooth &&\n                    this._lastFrameTime !== undefined &&\n                    timestamp < this._lastFrameTime + millisecondsToSeconds / this.fpsLimit) {\n                    this.draw(false);\n                    return;\n                }\n                this._lastFrameTime ??= timestamp;\n                const delta = initDelta(timestamp - this._lastFrameTime, this.fpsLimit, this._smooth);\n                this.addLifeTime(delta.value);\n                this._lastFrameTime = timestamp;\n                if (delta.value > millisecondsToSeconds) {\n                    this.draw(false);\n                    return;\n                }\n                await this.particles.draw(delta);\n                if (!this.alive()) {\n                    this.destroy();\n                    return;\n                }\n                if (this.animationStatus) {\n                    this.draw(false);\n                }\n            }\n            catch (e) {\n                getLogger().error(`${errorPrefix} in animation loop`, e);\n            }\n        };\n        this._engine = engine;\n        this.id = Symbol(id);\n        this.fpsLimit = 120;\n        this._smooth = false;\n        this._delay = 0;\n        this._duration = 0;\n        this._lifeTime = 0;\n        this._firstStart = true;\n        this.started = false;\n        this.destroyed = false;\n        this._paused = true;\n        this._lastFrameTime = 0;\n        this.zLayers = 100;\n        this.pageHidden = false;\n        this._sourceOptions = sourceOptions;\n        this._initialSourceOptions = sourceOptions;\n        this.retina = new Retina(this);\n        this.canvas = new Canvas(this);\n        this.particles = new Particles(this._engine, this);\n        this.pathGenerators = new Map();\n        this.interactivity = {\n            mouse: {\n                clicking: false,\n                inside: false,\n            },\n        };\n        this.plugins = new Map();\n        this.effectDrawers = new Map();\n        this.shapeDrawers = new Map();\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this);\n        this._eventListeners = new EventListeners(this);\n        this._intersectionObserver = safeIntersectionObserver((entries) => this._intersectionManager(entries));\n        this._engine.dispatchEvent(\"containerBuilt\", { container: this });\n    }\n    get animationStatus() {\n        return !this._paused && !this.pageHidden && guardCheck(this);\n    }\n    get options() {\n        return this._options;\n    }\n    get sourceOptions() {\n        return this._sourceOptions;\n    }\n    addClickHandler(callback) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const el = this.interactivity.element;\n        if (!el) {\n            return;\n        }\n        const clickOrTouchHandler = (e, pos, radius) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const pxRatio = this.retina.pixelRatio, posRetina = {\n                x: pos.x * pxRatio,\n                y: pos.y * pxRatio,\n            }, particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\n            callback(e, particles);\n        };\n        const clickHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const mouseEvent = e, pos = {\n                x: mouseEvent.offsetX || mouseEvent.clientX,\n                y: mouseEvent.offsetY || mouseEvent.clientY,\n            }, radius = 1;\n            clickOrTouchHandler(e, pos, radius);\n        };\n        const touchStartHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = true;\n            touchMoved = false;\n        };\n        const touchMoveHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touchMoved = true;\n        };\n        const touchEndHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            if (touched && !touchMoved) {\n                const touchEvent = e;\n                const lengthOffset = 1;\n                let lastTouch = touchEvent.touches[touchEvent.touches.length - lengthOffset];\n                if (!lastTouch) {\n                    lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - lengthOffset];\n                    if (!lastTouch) {\n                        return;\n                    }\n                }\n                const element = this.canvas.element, canvasRect = element ? element.getBoundingClientRect() : undefined, minCoordinate = 0, pos = {\n                    x: lastTouch.clientX - (canvasRect ? canvasRect.left : minCoordinate),\n                    y: lastTouch.clientY - (canvasRect ? canvasRect.top : minCoordinate),\n                };\n                clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        const touchCancelHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        let touched = false, touchMoved = false;\n        el.addEventListener(\"click\", clickHandler);\n        el.addEventListener(\"touchstart\", touchStartHandler);\n        el.addEventListener(\"touchmove\", touchMoveHandler);\n        el.addEventListener(\"touchend\", touchEndHandler);\n        el.addEventListener(\"touchcancel\", touchCancelHandler);\n    }\n    addLifeTime(value) {\n        this._lifeTime += value;\n    }\n    addPath(key, generator, override = false) {\n        if (!guardCheck(this) || (!override && this.pathGenerators.has(key))) {\n            return false;\n        }\n        this.pathGenerators.set(key, generator);\n        return true;\n    }\n    alive() {\n        return !this._duration || this._lifeTime <= this._duration;\n    }\n    destroy() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        this.particles.destroy();\n        this.canvas.destroy();\n        for (const [, effectDrawer] of this.effectDrawers) {\n            effectDrawer.destroy?.(this);\n        }\n        for (const [, shapeDrawer] of this.shapeDrawers) {\n            shapeDrawer.destroy?.(this);\n        }\n        for (const key of this.effectDrawers.keys()) {\n            this.effectDrawers.delete(key);\n        }\n        for (const key of this.shapeDrawers.keys()) {\n            this.shapeDrawers.delete(key);\n        }\n        this._engine.clearPlugins(this);\n        this.destroyed = true;\n        const mainArr = this._engine.dom(), idx = mainArr.findIndex((t) => t === this), minIndex = 0;\n        if (idx >= minIndex) {\n            const deleteCount = 1;\n            mainArr.splice(idx, deleteCount);\n        }\n        this._engine.dispatchEvent(\"containerDestroyed\", { container: this });\n    }\n    draw(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        let refreshTime = force;\n        const frame = async (timestamp) => {\n            if (refreshTime) {\n                this._lastFrameTime = undefined;\n                refreshTime = false;\n            }\n            await this._nextFrame(timestamp);\n        };\n        this._drawAnimationFrame = requestAnimationFrame((timestamp) => void frame(timestamp));\n    }\n    async export(type, options = {}) {\n        for (const [, plugin] of this.plugins) {\n            if (!plugin.export) {\n                continue;\n            }\n            const res = await plugin.export(type, options);\n            if (!res.supported) {\n                continue;\n            }\n            return res.blob;\n        }\n        getLogger().error(`${errorPrefix} - Export plugin with type ${type} not found`);\n    }\n    handleClickMode(mode) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.particles.handleClickMode(mode);\n        for (const [, plugin] of this.plugins) {\n            plugin.handleClickMode?.(mode);\n        }\n    }\n    async init() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const effects = this._engine.getSupportedEffects();\n        for (const type of effects) {\n            const drawer = this._engine.getEffectDrawer(type);\n            if (drawer) {\n                this.effectDrawers.set(type, drawer);\n            }\n        }\n        const shapes = this._engine.getSupportedShapes();\n        for (const type of shapes) {\n            const drawer = this._engine.getShapeDrawer(type);\n            if (drawer) {\n                this.shapeDrawers.set(type, drawer);\n            }\n        }\n        await this.particles.initPlugins();\n        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        const availablePlugins = await this._engine.getAvailablePlugins(this);\n        for (const [id, plugin] of availablePlugins) {\n            this.plugins.set(id, plugin);\n        }\n        this.retina.init();\n        await this.canvas.init();\n        this.updateActualOptions();\n        this.canvas.initBackground();\n        this.canvas.resize();\n        this.zLayers = this.actualOptions.zLayers;\n        this._duration = getRangeValue(this.actualOptions.duration) * millisecondsToSeconds;\n        this._delay = getRangeValue(this.actualOptions.delay) * millisecondsToSeconds;\n        this._lifeTime = 0;\n        const defaultFpsLimit = 120, minFpsLimit = 0;\n        this.fpsLimit = this.actualOptions.fpsLimit > minFpsLimit ? this.actualOptions.fpsLimit : defaultFpsLimit;\n        this._smooth = this.actualOptions.smooth;\n        for (const [, drawer] of this.effectDrawers) {\n            await drawer.init?.(this);\n        }\n        for (const [, drawer] of this.shapeDrawers) {\n            await drawer.init?.(this);\n        }\n        for (const [, plugin] of this.plugins) {\n            await plugin.init?.();\n        }\n        this._engine.dispatchEvent(\"containerInit\", { container: this });\n        await this.particles.init();\n        await this.particles.setDensity();\n        for (const [, plugin] of this.plugins) {\n            plugin.particlesSetup?.();\n        }\n        this._engine.dispatchEvent(\"particlesSetup\", { container: this });\n    }\n    async loadTheme(name) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._currentTheme = name;\n        await this.refresh();\n    }\n    pause() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        if (this._drawAnimationFrame !== undefined) {\n            cancelAnimationFrame(this._drawAnimationFrame);\n            delete this._drawAnimationFrame;\n        }\n        if (this._paused) {\n            return;\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.pause?.();\n        }\n        if (!this.pageHidden) {\n            this._paused = true;\n        }\n        this._engine.dispatchEvent(\"containerPaused\", { container: this });\n    }\n    play(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const needsUpdate = this._paused || force;\n        if (this._firstStart && !this.actualOptions.autoPlay) {\n            this._firstStart = false;\n            return;\n        }\n        if (this._paused) {\n            this._paused = false;\n        }\n        if (needsUpdate) {\n            for (const [, plugin] of this.plugins) {\n                if (plugin.play) {\n                    plugin.play();\n                }\n            }\n        }\n        this._engine.dispatchEvent(\"containerPlay\", { container: this });\n        this.draw(needsUpdate ?? false);\n    }\n    async refresh() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        return this.start();\n    }\n    async reset() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._initialSourceOptions = undefined;\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        return this.refresh();\n    }\n    async start() {\n        if (!guardCheck(this) || this.started) {\n            return;\n        }\n        await this.init();\n        this.started = true;\n        await new Promise((resolve) => {\n            const start = async () => {\n                this._eventListeners.addListeners();\n                if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n                    this._intersectionObserver.observe(this.interactivity.element);\n                }\n                for (const [, plugin] of this.plugins) {\n                    await plugin.start?.();\n                }\n                this._engine.dispatchEvent(\"containerStarted\", { container: this });\n                this.play();\n                resolve();\n            };\n            this._delayTimeout = setTimeout(() => void start(), this._delay);\n        });\n    }\n    stop() {\n        if (!guardCheck(this) || !this.started) {\n            return;\n        }\n        if (this._delayTimeout) {\n            clearTimeout(this._delayTimeout);\n            delete this._delayTimeout;\n        }\n        this._firstStart = true;\n        this.started = false;\n        this._eventListeners.removeListeners();\n        this.pause();\n        this.particles.clear();\n        this.canvas.stop();\n        if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n            this._intersectionObserver.unobserve(this.interactivity.element);\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.stop?.();\n        }\n        for (const key of this.plugins.keys()) {\n            this.plugins.delete(key);\n        }\n        this._sourceOptions = this._options;\n        this._engine.dispatchEvent(\"containerStopped\", { container: this });\n    }\n    updateActualOptions() {\n        this.actualOptions.responsive = [];\n        const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n        this.actualOptions.setTheme(this._currentTheme);\n        if (this._responsiveMaxWidth === newMaxWidth) {\n            return false;\n        }\n        this._responsiveMaxWidth = newMaxWidth;\n        return true;\n    }\n}\n"],"names":["setTransformValue","factor","newFactor","key","_factor$key","newValue","undefined","setStyle","canvas","style","important","arguments","length","elementStyle","value","setProperty","Canvas","container","_this","_classCallCheck","this","_applyPostDrawUpdaters","particle","_step","_iterator","_createForOfIteratorHelper","_postDrawUpdaters","s","n","done","_updater$afterDraw","updater","afterDraw","call","err","e","f","_applyPreDrawUpdaters","ctx","radius","zOpacity","colorStyles","transform","_step2","_iterator2","_preDrawUpdaters","_updater$beforeDraw","getColorStyles","_updater$getColorStyl","fill","stroke","getTransformValues","updaterTransform","beforeDraw","_applyResizePlugins","_step3","_iterator3","_resizePlugins","_plugin$resize","plugin","resize","_getPluginParticleColors","fColor","sColor","_step4","_iterator4","_colorPlugins","particleFillColor","rangeColorToHsl","particleStrokeColor","_initCover","_asyncToGenerator","_regeneratorRuntime","mark","_callee","options","cover","color","coverRgb","coverColor","wrap","_context","prev","next","actualOptions","backgroundMask","rangeColorToRgb","_objectSpread","a","opacity","_coverColorStyle","getStyleFromRgb","Promise","resolve","reject","image","img","document","createElement","addEventListener","_coverImage","evt","error","src","stop","_initStyle","element","_fullScreen","_originalStyle","deepExtend","_setFullScreenStyle","_resetOriginalStyle","_initTrail","_callee2","trail","trailFill","fillColor","_context2","particles","move","enable","abrupt","_trailFill","_paintBase","baseColor","draw","paintBase","size","_paintImage","paintImage","_repairStyle","_safeMutationObserver","observer","disconnect","initBackground","observe","attributes","originalStyle","callback","_mutationObserver","position","zIndex","fullScreen","toString","top","left","width","height","_generated","_createClass","get","_this2","paint","clear","remove","cb","_drawParticle2","_callee4","delta","_particle$getStrokeCo","pfColor","psColor","_this$_getPluginParti","_this$_getPluginParti2","_this3","_context4","spawning","destroyed","getRadius","getFillColor","getStrokeColor","_slicedToArray","drawAsync","_ref3","_callee3","_ref4","_particle$bubble$opac","_particle$opacity","_particle$strokeOpaci","zIndexOptions","zIndexFactor","zOpacityFactor","strokeOpacity","zStrokeOpacity","_context3","Math","pow","opacityRate","bubble","getStyleFromHsl","drawParticle","context","composite","sizeRate","shadow","_x3","apply","_x","_x2","_drawParticlePlugin2","_callee5","_context5","drawParticlePlugin","_x4","_x5","_x6","_drawPlugin2","_callee6","_context6","drawPlugin","_x7","_x8","_init","_callee7","_this4","_context7","obs","safeMutationObserver","records","_step5","_iterator5","record","type","attributeName","t0","getLogger","initUpdaters","initPlugins","background","backgroundColor","backgroundImage","backgroundPosition","backgroundRepeat","repeat","backgroundSize","_step6","_iterator6","plugins","_plugin$particleFillC","push","_step7","_iterator7","updaters","_ref5","_updater$getColorStyl2","_this5","dataset","generatedAttribute","ariaHidden","offsetHeight","offsetWidth","getContext","retina","init","_this6","pxRatio","pixelRatio","newSize","oldSize","started","setResizeFactor","_this7","_windowResize","_callee8","needsRefresh","_context8","updateActualOptions","setDensity","refresh","double","manageListener","event","handler","add","addOptions","passive","isBoolean","capture","removeOptions","removeEventListener","EventListeners","_doMouseTouchClick","_canPush","mouseInteractivity","interactivity","mouse","mousePos","clickPosition","clickTime","Date","getTime","onClick","events","executeOnSingleOrMultiple","mode","handleClickMode","setTimeout","_mouseTouchFinish","_handleThemeChange","mediaEvent","defaultThemes","themeName","matches","dark","light","theme","themes","find","name","default","auto","loadTheme","_handleVisibilityChange","pauseOnBlur","hidden","pageHidden","pause","animationStatus","play","_handleWindowResize","_resizeTimeout","clearTimeout","handleResize","_ref","windowResize","delay","millisecondsToSeconds","_manageInteractivityListeners","mouseLeaveTmpEvent","handlers","_handlers","interactivityEl","html","canvasEl","pointerEvents","onHover","mouseMoveEvent","mouseMove","touchStartEvent","touchStart","touchMoveEvent","touchMove","touchEndEvent","touchEndClick","mouseUpEvent","mouseUp","mouseDownEvent","mouseDown","touchEnd","mouseLeave","touchCancelEvent","touchCancel","_manageListeners","detectType","detectsOn","mouseLeaveEvent","window","mouseOutEvent","_canvasEl$parentEleme","parentElement","parentNode","_manageMediaMatch","_manageResize","visibilityChangeEvent","visibilityChange","mediaMatch","safeMatchMedia","addListener","oldThemeChange","removeListener","themeChange","ResizeObserver","_resizeObserver","unobserve","entries","target","resizeEvent","_mouseDown","clicking","downPosition","_mouseTouchClick","inside","handled","mousePosition","clickPositionValid","status","_mouseTouchMove","pos","startsWith","mouseEvent","clientRect","getBoundingClientRect","x","clientX","y","clientY","source","currentTarget","sourceRect","targetRect","canvasRect","offsetX","offsetY","_mouseEvent$offsetX","_mouseEvent$offsetY","_mouseEvent$offsetX2","_mouseEvent$offsetY2","_canvasRect$left","_canvasRect$top","touchEvent","lastTouch","touches","_touchEnd","_i","_touches","Array","from","changedTouches","touch","delete","identifier","_touchEndClick","_i2","_touches2","_touchStart","_i3","_touches3","set","performance","now","Map","InteractionManager","engine","_engine","_interactors","_externalInteractors","_particleInteractors","_externalInteract","interactor","isEnabled","interact","finish","_interactor$handleCli","getInteractors","sent","t1","_particlesInteract","_interactor","reset","Point","half","subdivideCount","QuadTree","rectangle","capacity","_subdivide","_this$rectangle$posit","_this$rectangle$size","i","fixedIndex","_subs","Rectangle","round","_divided","_points","point","contains","some","sub","insert","range","check","found","res","intersects","p","getDistance","query","Circle","qTreeCapacity","squareExp","defaultRemoveQuantity","qTreeRectangle","canvasSize","Particles","_addToPool","_len","_key","_particles","_pool","_applyDensity","manualCount","group","_options$number$densi","numberOptions","densityFactor","optParticlesNumber","optParticlesLimit","particlesNumber","particlesCount","number","density","_limit","limit","_groupLimits","_initDensityFactor","min","count","filter","t","abs","removeQuantity","densityOptions","_container","_pushParticle","_ref2","overrideOptions","initializer","_yield$import","Particle","canAdd","pop","_nextId","_array","_zArray","dispatchEvent","data","warning","concat","errorPrefix","_removeParticle","index","override","zIdx","indexOf","splice","destroy","_needsSort","_lastZIndex","_interactionManager","_pluginsInitialized","quadTree","movers","_addManualParticles","manualParticles","addParticle","getPosition","_addParticle","_this$_groupLimits$ge","limitOptions","currentCount","countToRemove","_x9","_x10","_x11","_draw","_step2$value","update","_x12","condition","_step4$value","particlesOptions","groups","groupOptions","j","_groupOptions$number","particlesInitialization","addManualParticles","keys","t2","_initPlugins","_step5$value","pathGenerator","getMovers","getUpdaters","pathGenerators","_push","nb","_x13","_x14","_x15","_x16","_redraw","_callee9","_context9","removeAt","quantity","deleted","_setDensity","_callee10","_context10","_resizeFactor","_update","_callee11","particlesToDelete","_step6$value","_plugin$update","_step7$value","resizeFactor","_iterator8","_step8","_particle","_iterator11","_step11","_plugin$particleUpdat","_step11$value","_plugin","_iterator12","_step12","mover","checkDelete","_iterator9","_step9","_iterator10","_step10","_particle2","_iterator13","_step13","zArray","_context11","Set","ignoresResizeRatio","initialPosition","particleUpdate","t3","has","_toConsumableArray","externalInteract","t4","particlesInteract","t5","sort","b","z","id","_x17","defaultRatio","defaultReduceFactor","Retina","reduceFactor","detectRetina","isSsr","devicePixelRatio","ratio","moveOptions","maxSpeed","getRangeValue","gravity","sizeAnimationSpeed","animation","speed","moveDistance","distance","props","moveDrift","drift","moveSpeed","maxDistance","horizontal","vertical","guardCheck","defaultFps","initDelta","loadContainerOptions","Options","sourceOptionsArr","loadOptions","Container","sourceOptions","_intersectionManager","pauseOnOutsideViewport","entry","isIntersecting","_nextFrame","timestamp","_this$_lastFrameTime","_smooth","_lastFrameTime","fpsLimit","addLifeTime","alive","Symbol","_delay","_duration","_lifeTime","_firstStart","_paused","zLayers","_sourceOptions","_initialSourceOptions","effectDrawers","shapeDrawers","_options","_eventListeners","_intersectionObserver","safeIntersectionObserver","el","clickOrTouchHandler","posRetina","queryCircle","touched","touchMoved","max","radiusX","radiusY","generator","_effectDrawer$destroy","effectDrawer","_shapeDrawer$destroy","shapeDrawer","clearPlugins","mainArr","dom","idx","findIndex","force","refreshTime","frame","_drawAnimationFrame","requestAnimationFrame","_export2","_args3","export","supported","blob","_plugin$handleClickMo","effects","drawer","shapes","_type","_drawer","availablePlugins","_step10$value","_drawer2$init","_drawer2","_drawer3$init","_step12$value","_drawer3","_plugin$init","_step13$value","_iterator14","_step14","_plugin2$particlesSet","_step14$value","_plugin2","getSupportedEffects","getEffectDrawer","getSupportedShapes","getShapeDrawer","getAvailablePlugins","duration","smooth","particlesSetup","_loadTheme","_currentTheme","cancelAnimationFrame","_step15","_iterator15","_plugin$pause","needsUpdate","autoPlay","_step16","_iterator16","_refresh","start","_reset","_start","_iterator17","_step17","_plugin$start","_step17$value","addListeners","HTMLElement","_delayTimeout","removeListeners","_step18","_iterator18","_plugin$stop","_step19","_iterator19","responsive","newMaxWidth","setResponsive","setTheme","_responsiveMaxWidth"],"sourceRoot":""}