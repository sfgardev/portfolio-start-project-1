{"version":3,"file":"static/js/8862.e7fd6907.chunk.js","mappings":"gOACMA,EAAY,EAAGC,EAAO,GAAKC,EAASC,KAAKC,GAAKH,EAAMI,EAAS,EAAGC,EAAkB,GAAIC,EAAY,EACxG,SAASC,EAAcC,EAAWC,EAAUC,EAAQC,EAAMC,GACtD,IAC4BC,EADtBC,EAAQN,EAAUO,UAAUC,SAASF,MAAMH,EAAMC,GAAWK,GAAAC,EAAAA,EAAAA,GAC3CJ,GAAK,IAA5B,IAAAG,EAAAE,MAAAN,EAAAI,EAAAG,KAAAC,MAA8B,KAAnBC,EAAQT,EAAAU,MACXZ,aAAgBa,EAAAA,IAChBC,EAAAA,EAAAA,KAAaC,EAAAA,EAAAA,IAA6BJ,GAAW,CACjDb,SAAAA,EACAC,OAAAA,EACAiB,KAAMzB,KAAA0B,IAAAlB,EAAUX,GAAYE,EAC5B4B,SAAUC,EAAAA,GAAAA,OACVC,OAAQD,EAAAA,GAAAA,SAGPnB,aAAgBqB,EAAAA,KACrBC,EAAAA,EAAAA,IAAWX,GAAUY,EAAAA,EAAAA,IAAgBzB,EAAUC,GAEvD,CAAC,OAAAyB,GAAAlB,EAAAmB,EAAAD,EAAA,SAAAlB,EAAAoB,GAAA,CACL,CAgBO,SAASC,EAAU9B,EAAW+B,EAAMC,EAAY5B,IACnD6B,EAAAA,EAAAA,IAAeD,EAAYD,GAAM,SAACG,EAAUC,GAAG,OAhBnD,SAA8BnC,EAAWkC,EAAUC,EAAKC,GACpD,IAAM9B,EAAQ+B,SAASC,iBAAiBJ,GACnC5B,EAAMiC,QAGXjC,EAAMkC,SAAQ,SAACC,GACX,IAAMC,EAAOD,EAAME,EAAU3C,EAAU4C,OAAOC,WAAYC,EAAM,CAC5DC,GAAIL,EAAKM,WAAaN,EAAKO,YAAczD,GAAQmD,EACjDO,GAAIR,EAAKS,UAAYT,EAAKU,aAAe5D,GAAQmD,GAClDzC,EAASwC,EAAKO,YAAczD,EAAOmD,EAASU,EAAYxD,EAAkB8C,EAASxC,EAAoB,WAAbgC,EAAImB,KAC3F,IAAItC,EAAAA,GAAO8B,EAAIC,EAAGD,EAAII,EAAGhD,EAASmD,GAClC,IAAI7B,EAAAA,GAAUkB,EAAKM,WAAaL,EAAUU,EAAWX,EAAKS,UAAYR,EAAUU,EAAWX,EAAKO,YAAcN,EAAUU,EAAYzD,EAAQ8C,EAAKU,aAAeT,EAAUU,EAAYzD,GAC5LwC,EAASU,EAAK5C,EAAQC,EAC1B,GACJ,CAEwDoD,CAAqBvD,EAAWkC,EAAUC,GAAK,SAACW,EAAK5C,EAAQC,GAAI,OAAKJ,EAAcC,EAAW8C,EAAK5C,EAAQC,EAAMC,EAAU,GAAC,GACrL,CACO,SAASoD,EAAYxD,EAAWI,GACnC,IAAMuC,EAAU3C,EAAU4C,OAAOC,WAAYQ,EAAYxD,EAAkB8C,EAASc,EAAWzD,EAAU0D,cAAcC,MAAM1D,SAAUC,EAASF,EAAU4C,OAAOgB,oBAC5J1D,GAAUA,EAASJ,IAAc2D,GAGtC1D,EAAcC,EAAWyD,EAAUvD,EAAQ,IAAIc,EAAAA,GAAOyC,EAASV,EAAGU,EAASP,EAAGhD,EAASmD,GAAYjD,EACvG,C","sources":["../node_modules/@tsparticles/interaction-external-bounce/browser/Utils.js"],"sourcesContent":["import { Circle, Rectangle, Vector, calculateBounds, circleBounce, circleBounceDataFromParticle, divModeExecute, rectBounce, } from \"@tsparticles/engine\";\nconst squareExp = 2, half = 0.5, halfPI = Math.PI * half, double = 2, toleranceFactor = 10, minRadius = 0;\nfunction processBounce(container, position, radius, area, enabledCb) {\n    const query = container.particles.quadTree.query(area, enabledCb);\n    for (const particle of query) {\n        if (area instanceof Circle) {\n            circleBounce(circleBounceDataFromParticle(particle), {\n                position,\n                radius,\n                mass: radius ** squareExp * halfPI,\n                velocity: Vector.origin,\n                factor: Vector.origin,\n            });\n        }\n        else if (area instanceof Rectangle) {\n            rectBounce(particle, calculateBounds(position, radius));\n        }\n    }\n}\nfunction singleSelectorBounce(container, selector, div, bounceCb) {\n    const query = document.querySelectorAll(selector);\n    if (!query.length) {\n        return;\n    }\n    query.forEach((item) => {\n        const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n            x: (elem.offsetLeft + elem.offsetWidth * half) * pxRatio,\n            y: (elem.offsetTop + elem.offsetHeight * half) * pxRatio,\n        }, radius = elem.offsetWidth * half * pxRatio, tolerance = toleranceFactor * pxRatio, area = div.type === \"circle\"\n            ? new Circle(pos.x, pos.y, radius + tolerance)\n            : new Rectangle(elem.offsetLeft * pxRatio - tolerance, elem.offsetTop * pxRatio - tolerance, elem.offsetWidth * pxRatio + tolerance * double, elem.offsetHeight * pxRatio + tolerance * double);\n        bounceCb(pos, radius, area);\n    });\n}\nexport function divBounce(container, divs, bounceMode, enabledCb) {\n    divModeExecute(bounceMode, divs, (selector, div) => singleSelectorBounce(container, selector, div, (pos, radius, area) => processBounce(container, pos, radius, area, enabledCb)));\n}\nexport function mouseBounce(container, enabledCb) {\n    const pxRatio = container.retina.pixelRatio, tolerance = toleranceFactor * pxRatio, mousePos = container.interactivity.mouse.position, radius = container.retina.bounceModeDistance;\n    if (!radius || radius < minRadius || !mousePos) {\n        return;\n    }\n    processBounce(container, mousePos, radius, new Circle(mousePos.x, mousePos.y, radius + tolerance), enabledCb);\n}\n"],"names":["squareExp","half","halfPI","Math","PI","double","toleranceFactor","minRadius","processBounce","container","position","radius","area","enabledCb","_step","query","particles","quadTree","_iterator","_createForOfIteratorHelper","s","n","done","particle","value","Circle","circleBounce","circleBounceDataFromParticle","mass","pow","velocity","Vector","factor","Rectangle","rectBounce","calculateBounds","err","e","f","divBounce","divs","bounceMode","divModeExecute","selector","div","bounceCb","document","querySelectorAll","length","forEach","item","elem","pxRatio","retina","pixelRatio","pos","x","offsetLeft","offsetWidth","y","offsetTop","offsetHeight","tolerance","type","singleSelectorBounce","mouseBounce","mousePos","interactivity","mouse","bounceModeDistance"],"sourceRoot":""}